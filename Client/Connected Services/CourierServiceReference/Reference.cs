//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.CourierServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourierServiceReference.ICourierService")]
    public interface ICourierService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourierService/placerequest", ReplyAction="http://tempuri.org/ICourierService/placerequestResponse")]
        int placerequest(int sender_id, string sender_address, string src_city, string receiver_name, string receiver_address, string receiver_mobile, string dest_city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourierService/placerequest", ReplyAction="http://tempuri.org/ICourierService/placerequestResponse")]
        System.Threading.Tasks.Task<int> placerequestAsync(int sender_id, string sender_address, string src_city, string receiver_name, string receiver_address, string receiver_mobile, string dest_city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourierService/cancelrequest", ReplyAction="http://tempuri.org/ICourierService/cancelrequestResponse")]
        string cancelrequest(int courier_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourierService/cancelrequest", ReplyAction="http://tempuri.org/ICourierService/cancelrequestResponse")]
        System.Threading.Tasks.Task<string> cancelrequestAsync(int courier_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourierServiceChannel : Client.CourierServiceReference.ICourierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourierServiceClient : System.ServiceModel.ClientBase<Client.CourierServiceReference.ICourierService>, Client.CourierServiceReference.ICourierService {
        
        public CourierServiceClient() {
        }
        
        public CourierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int placerequest(int sender_id, string sender_address, string src_city, string receiver_name, string receiver_address, string receiver_mobile, string dest_city) {
            return base.Channel.placerequest(sender_id, sender_address, src_city, receiver_name, receiver_address, receiver_mobile, dest_city);
        }
        
        public System.Threading.Tasks.Task<int> placerequestAsync(int sender_id, string sender_address, string src_city, string receiver_name, string receiver_address, string receiver_mobile, string dest_city) {
            return base.Channel.placerequestAsync(sender_id, sender_address, src_city, receiver_name, receiver_address, receiver_mobile, dest_city);
        }
        
        public string cancelrequest(int courier_id) {
            return base.Channel.cancelrequest(courier_id);
        }
        
        public System.Threading.Tasks.Task<string> cancelrequestAsync(int courier_id) {
            return base.Channel.cancelrequestAsync(courier_id);
        }
    }
}
